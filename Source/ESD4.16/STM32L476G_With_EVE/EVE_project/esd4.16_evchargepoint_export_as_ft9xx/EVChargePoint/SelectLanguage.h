/*
This file is automatically generated
DO NOT MODIFY BY HAND
SelectLanguage
Header
*/

#ifndef SelectLanguage__H
#define SelectLanguage__H

#include "BooleanVariable.h"
#include "CircleCN.h"
#include "CircleDE.h"
#include "CircleEN.h"
#include "Esd_Base.h"
#include "Esd_Core.h"
#include "Esd_FontInfo.h"
#include "FadeOutAnimation.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_ImageButton.h"
#include "Ft_Esd_Label.h"
#include "Ft_Esd_Layout_Fill.h"
#include "Ft_Esd_Layout_Fixed.h"
#include "Ft_Esd_Layout_Linear.h"
#include "Ft_Esd_Layout_Stretch.h"
#include "Ft_Esd_Rectangle.h"
#include "Ft_Esd_Theme.h"
#include "Ft_Esd_Widget.h"
#include "NotoSansCJKscLight24.h"
#include "RubikLight24.h"
#include "RubikMedium24.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define SelectLanguage_CLASSID 0x9CDC3C94
ESD_SYMBOL(SelectLanguage_CLASSID, Type = esd_classid_t)

ESD_WIDGET(SelectLanguage, Include = "SelectLanguage.h", Callback, X = 0, Y = 0, Width = 400, Height = 300, Page)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(Alpha, Type = ft_uint8_t, Default = 255, Public)
	ft_uint8_t Alpha;
	BooleanVariable Buttons_Enabled;
	ESD_VARIABLE(EN_Alpha, Type = uint8_t, Default = 255, Private)
	uint8_t EN_Alpha;
	ESD_VARIABLE(RU_Alpha, Type = uint8_t, Default = 255, Private)
	uint8_t RU_Alpha;
	ESD_SIGNAL(PushedEN)
	void(* PushedEN)(void *context);
	ESD_SIGNAL(PushedRU)
	void(* PushedRU)(void *context);
	ESD_VARIABLE(CN_Alpha, Type = uint8_t, Default = 255, Private)
	uint8_t CN_Alpha;
	ESD_SIGNAL(PushedCN)
	void(* PushedCN)(void *context);
	FadeOutAnimation Fade_Out_EN;
	FadeOutAnimation Fade_Out_RU;
	FadeOutAnimation Fade_Out_CN;
	Ft_Esd_Layout_Fill Fill_Layout;
	Ft_Esd_Layout_Linear Linear_Layout;
	Ft_Esd_Layout_Stretch Stretch_2;
	Ft_Esd_Layout_Linear Linear_Layout_2;
	Ft_Esd_ImageButton ESD_Image_Button;
	Ft_Esd_Layout_Fill Fill_Layout_2;
	Ft_Esd_ImageButton ESD_Image_Button_1;
	Ft_Esd_Layout_Fill Fill_Layout_2_1;
	Ft_Esd_ImageButton ESD_Image_Button_2;
	Ft_Esd_Layout_Stretch Stretch;
	Ft_Esd_Layout_Linear Linear_Layout_3;
	Ft_Esd_Layout_Linear Linear_Layout_4;
	Ft_Esd_Label ESD_Label_2;
	Ft_Esd_Layout_Fill Fill_Layout_2_2;
	Ft_Esd_Label ESD_Label_2_1;
	Ft_Esd_Layout_Fill Fill_Layout_2_3;
	Ft_Esd_Label ESD_Label_2_2;
	Ft_Esd_Layout_Fixed Fixed_Position;
	Ft_Esd_Label ESD_Label;
	Ft_Esd_Rectangle ESD_Rectangle_Widget;
} SelectLanguage;

void SelectLanguage__Initializer(SelectLanguage *context);

ESD_SLOT(Update)
void SelectLanguage_Update(SelectLanguage *context);

ESD_SLOT(End)
void SelectLanguage_End(SelectLanguage *context);

#endif /* SelectLanguage__H */

/* end of file */
