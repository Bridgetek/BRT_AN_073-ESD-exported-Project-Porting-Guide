/*
This file is automatically generated
DO NOT MODIFY BY HAND
GradientBar
Header
*/

#ifndef GradientBar__H
#define GradientBar__H

#include "Esd_Base.h"
#include "Ft_Esd.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define GradientBar_CLASSID 0x3B1126A3
ESD_SYMBOL(GradientBar_CLASSID, Type = esd_classid_t)

ESD_WIDGET(GradientBar, Include = "GradientBar.h", Callback, X = -6, Y = 31, Width = 270, Height = 68)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(BackgroundColor, Type = ft_rgb32_t, Default = #68a812, Public)
	ft_rgb32_t BackgroundColor;
	ESD_VARIABLE(GlowColor, Type = ft_rgb32_t, Default = #bffc29, Public)
	ft_rgb32_t GlowColor;
	ESD_VARIABLE(GlowWidth, Type = ft_int16_t, Default = 24, Public)
	ft_int16_t GlowWidth;
	ESD_VARIABLE(GlowProgress, Type = ft_int32_f16_t, Default = 0.5, Public)
	ft_int32_f16_t GlowProgress;
} GradientBar;

void GradientBar__Initializer(GradientBar *context);

ESD_SLOT(Render)
void GradientBar_Render(GradientBar *context);

#endif /* GradientBar__H */

/* end of file */
