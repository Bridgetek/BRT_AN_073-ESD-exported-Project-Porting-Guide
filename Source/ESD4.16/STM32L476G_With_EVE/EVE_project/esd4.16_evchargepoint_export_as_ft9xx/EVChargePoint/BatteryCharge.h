/*
This file is automatically generated
DO NOT MODIFY BY HAND
BatteryCharge
Header
*/

#ifndef BatteryCharge__H
#define BatteryCharge__H

#include "BatteryBg.h"
#include "Esd_Base.h"
#include "Esd_Core.h"
#include "Esd_FontInfo.h"
#include "Ft_Esd.h"
#include "Ft_Esd_BitmapInfo.h"
#include "Ft_Esd_Image.h"
#include "Ft_Esd_Label.h"
#include "Ft_Esd_Layout_Fixed.h"
#include "Ft_Esd_Layout_Linear.h"
#include "Ft_Esd_NumericLabel.h"
#include "Ft_Esd_Rectangle.h"
#include "Ft_Esd_Theme.h"
#include "Ft_Esd_Widget.h"
#include "RubikMedium24.h"
#include "RubikRegular24.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define BatteryCharge_CLASSID 0xCB536F01
ESD_SYMBOL(BatteryCharge_CLASSID, Type = esd_classid_t)

ESD_WIDGET(BatteryCharge, Include = "BatteryCharge.h", Callback, X = 163, Y = 95, Width = 373, Height = 234)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_INPUT(Value, Type = int, Default = 20)
	int(* Value)(void *context);
	Ft_Esd_Layout_Linear Linear_Layout;
	Ft_Esd_Image ESD_Image;
	Ft_Esd_Layout_Linear Linear_Layout_3;
	Ft_Esd_Layout_Linear Linear_Layout_2;
	Ft_Esd_NumericLabel ESD_Numeric_Label;
	Ft_Esd_Label ESD_Label;
	Ft_Esd_Layout_Fixed Fixed_Positioning;
	Ft_Esd_Rectangle Green_3;
	Ft_Esd_Rectangle Green_2;
	Ft_Esd_Rectangle Green_1;
	Ft_Esd_Rectangle Green_4;
	Ft_Esd_Rectangle Green_5;
	Ft_Esd_Rectangle Red_1;
} BatteryCharge;

void BatteryCharge__Initializer(BatteryCharge *context);

ESD_SLOT(Update)
void BatteryCharge_Update(BatteryCharge *context);

ESD_SLOT(End)
void BatteryCharge_End(BatteryCharge *context);

#endif /* BatteryCharge__H */

/* end of file */
